<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>argument</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the argument variable" />
  <meta name="rh-index-keywords" content="argument[n],argument0 - argument15" />
  <meta name="search-keywords" content="argument" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>argument</h1>
  <p>This variable holds an <a href="../../Arrays.htm">array</a> that is used along with the read-only variable <a href="argument_count.htm">argument_count</a> in <a href="../../Script_Functions.htm">script functions</a> or <a href="../../Method_Variables.htm">methods</a>.
    Each array position holds an input value for the function and is specifically for use with <em>variable </em>argument functions.</p>
  <p>Note that there are also a series of independent global scope variables that can also be used in user-defined functions to reference the different input arguments: <span class="inline">argument0</span>, <span class="inline">argument1</span>, <span class="inline">argument2</span>,
    etc... up to <span><span class="inline">argument15</span>.</span>
  </p>
  <p class="note"><strong>NOTE</strong>: This isn&#39;t strictly required any more and is provided for legacy support more than anything else. All user-defined functions will accept variable arguments, and any argument passed into a function that is not part of the named
    inputs will be initialised to <span class="inline" style="font-size: 14px">undefined</span> by default, which can be checked using the <a href="../../../GML_Reference/Variable_Functions/is_undefined.htm">is_undefined()</a> function.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">argument[<em>n</em>]<br/> argument1
    <br/> argument2
    <br/> ...
    <br/> argument15
  </p>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Value (can be of any <a href="../../Data_Types.htm">data type</a> supplied to the function)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">function my_array()<br/> {
    <br/> var i, arg;<br/> for (i = 0; i &lt; 5; i += 1;)<br/>    {
    <br/>    if argument_count &gt; i<br/>       {
    <br/>       arg[i] = argument[i]<br/>       }
    <br/>    else
    <br/>       {
    <br/>       arg[i] = -1;<br/>       }
    <br/>    }
    <br/> }
  </p>
  <p>The above code uses the <tt>argument_count</tt> variable along with the <span class="inline">argument</span> array to initialize variables, and is an example of how to permit a user-defined function to accept a variable number of arguments.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Global_Variables.htm">Global Variables</a></div>
        <div style="float:right">Next: <a href="argument_count.htm">argument_count</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
argument
-->
  <!-- TAGS
argument
-->
</body>
</html>