<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_question_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_question_async" />
  <meta name="rh-index-keywords" content="show_question_async" />
  <meta name="search-keywords" content="show_question_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>show_question_async</h1>
  <p>This function opens a window and displays the question you define in the function to the user. This is an asynchronous function, and as such GameMaker Studio 2 does <i>not</i> block the device it is being run on while waiting for an answer, but rather
    keeps on running events as normal. The function has two buttons that show &quot;Yes&quot; and &quot;No&quot;, and once the user has pressed one, an asynchronous <b>Dialog</b> event is triggered which, for the duration of that event <i>only</i>, will
    have a DS map stored in the variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a>.</p>
  <p>This map will contain the two keys, &quot;<strong>id</strong>&quot;, and &quot;<strong>status</strong>&quot;. &quot;id&quot; is the value that was returned by the function when called, while the &quot;status&quot; will be either <tt>true</tt> or <tt>false</tt>    for &quot;Yes&quot; and &quot;No&quot; respectively.</p>
  <p class="note"><strong><em>NOTE:</em></strong><em> This function is <span data-keyref="Dialog for debug only">for <strong>debugging and testing use only</strong> and should not be used in released games. For that purpose you should create a custom user interface to receive input from players so that you have complete control over how the dialogs look and behave.</span></em></p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">show_question_async(string);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>String</td>
        <td>The question to ask to the user.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Extended Example:</h4>
  <p>The <b>left mouse press event</b> (for example) of the object that is showing the message would have the following code:</p>
  <p class="code">msg = show_question_async(&quot;Do you want to buy some armour for &quot; + string(armour[0, 5]) + &quot;coins?&quot;);</p>
  <p>The above will show a question with the given string, requesting that the user press either &quot;yes&quot; or &quot;No&quot;. The function id is stored in the variable &quot;msg&quot; and will be used in the <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">Asynchronous Dialog event</a>    as shown below:</p>
  <p class="code">var i_d, stat;<br/> i_d = ds_map_find_value(async_load, &quot;id&quot;);<br/> if i_d == msg<br/>     {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;)<br/>         {
    <br/>         coins -= armour[0,5];<br/>         global.protection += armour[0,0];<br/>         }
    <br/>     }
  </p>
  <p>The above code checks the &quot;id&quot; key of the returned <tt>DS Map</tt> against the value stored in the variable &quot;msg&quot;. If they are the same, it then checks to see if one of the two buttons were pressed and if it returns <tt>true</tt>    it will then deduct a value from a variable and add a value to a global variable too.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Dialog.htm">Dialog</a></div>
        <div style="float:right">Next: <a href="shop_leave_rating.htm">shop_leave_rating</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
show_question_async
-->
  <!-- TAGS
show_question_async
-->
</body>
</html>