<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>push_cancel_local_notification</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for push_cancel_local_notification" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="push_cancel_local_notification" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>push_cancel_local_notification</h1>
  <p>This function cancels the given push notification. You can get the ID for the notification to cancel using the functions <a href="push_get_first_local_notification.htm"><tt>push_get_first_local_notification()</tt></a> and <a href="push_get_next_local_notification.htm"><tt>push_get_next_local_notification()</tt></a>    and the function will return <tt>true</tt> on success or <tt>false</tt> otherwise (for example if the notification does not exist or has already been triggered).</p>
  <p class="note"><b>NOTE</b>: This function is limited to the <b>iOS</b> and <b>Android</b> target modules.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">push_cancel_local_notification(ID);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>ID</td>
        <td>The ID of the notification to cancel.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Example :</h4>
  <p class="code">var map = ds_map_create();<br/> var ntf = push_get_first_local_notification(map);<br/> while(ntf &gt;= 0)<br/>     {
    <br/>     var data = ds_map_find_value(map, &quot;data&quot;);<br/>     if data == &quot;Daily_Reward&quot;<br/>         {
    <br/>         push_cancel_local_notification(ntf);
    <br/>         }
    <br/>     ntf = push_get_next_local_notification(map);<br/>     }
    <br/> ds_map_destroy(map);
  </p>
  <p>The above code creates a <tt>DS Map</tt> and then requests data for the first available notification in the queue. If a notification exists, the map is populated and the code then checks the &quot;data&quot; key for a specific string. If the string
    is found, the notification is canceled and moves on to check the next notification until all in the queue have been checked.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Push_Notifications.htm">Push Notifications</a></div>
        <div style="float:right">Next: <a href="push_local_notification.htm">push_local_notification</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
push_cancel_local_notification
-->
  <!-- TAGS
push_cancel_local_notification
-->
</body>
</html>