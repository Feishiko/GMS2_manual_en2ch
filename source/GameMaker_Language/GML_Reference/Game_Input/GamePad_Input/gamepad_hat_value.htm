<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>gamepad_hat_value</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for gamepad_hat_value"/>
  <meta name="rh-index-keywords" content="gamepad_hat_value"/>
  <meta name="search-keywords" content="gamepad_hat_value"/>
</head>

<body>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gamepad_hat_value</h1>
  <p>With this function you can get the current value of a gamepad &quot;hat&quot;. Each hat value is a bit-mask for the different directions where:</p>
  <ul class="colour">
    <li>Up = 1</li>
    <li>Right = 2</li>
    <li>Down = 4</li>
    <li>Left = 8</li>
  </ul>
  <p>Note that these can be combined (for example, supplying a hat index of 3 would be checking up and right) but only at most 2 bits can be pressed at once. The function will return a real value between 0 and 1, where 0 is not pressed and 1 is fully pressed
    (and there may be values in between depending on whether the gamepad supports analog input for hats).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">gamepad_hat_value(device, hatindex);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>device</td>
        <td>Which gamepad device &quot;slot&quot; to check.</td>
      </tr>
      <tr>
        <td>hatindex</td>
        <td>Which gamepad hat (or hats) to check for.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _dir = gamepad_hat_value(global.PadIndex, 0);<br/> switch (_dir)<br/>     {
    <br/>     case 1: y -= 3; break;<br/>     case 2: x += 3; break;<br/>     case 3: y -= 3; x += 3; break;<br/>     case 4: x -= 3; break;<br/>     case 6: y += 3; x += 3; break;<br/>     case 8: y += 3; break;<br/>     case 9: y -= 3; x -= 3; break;<br/>        case 12: y += 3; x -= 3; break;<br/>     }
  </p>
  <p>The above code stores the state of the hat &quot;0&quot; in a local variable, then checks to see what the return value is and acts accordingly.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Gamepad_Input.htm">Gamepad Input</a></div>
        <div style="float:right">Next: <a href="gamepad_get_mapping.htm">gamepad_get_mapping</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gamepad_hat_value
-->
  <!-- TAGS
gamepad_hat_value
-->

</body></html>