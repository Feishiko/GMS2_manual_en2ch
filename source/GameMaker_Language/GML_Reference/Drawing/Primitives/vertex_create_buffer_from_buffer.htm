<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>vertex_create_buffer_from_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference for vertex_create_buffer_from_buffer"/>
  <meta name="rh-index-keywords" content="vertex_create_buffer_from_buffer"/>
  <meta name="search-keywords" content="vertex_create_buffer_from_buffer"/>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_create_buffer_from_buffer</h1>
  <p>As with the function <a href="vertex_create_buffer.htm"><tt>vertex_create_buffer()</tt></a>, this function will create a new vertex buffer, only now the vertex data it stores is copied from the regular buffer that is specified as the source. The buffer
    created is a special <i>grow</i> buffer which is pre-formatted with the vertex format for building primitives for use with (for example) shaders. This function requires that you supply the pointer to a previously created regular buffer, and a vertex
    format that should be applied to the copied data.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">vertex_create_buffer_from_buffer(buffer, format);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>buffer</td>
        <td>The buffer to create the vertex buffer from.</td>
      </tr>
      <tr>
        <td>format</td>
        <td>The primitive vertex format to use.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Pointer</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">vertex_format_begin();<br/> vertex_format_add_position_3d();
    <br/> vertex_format_add_colour();
    <br/> vertex_format_add_textcoord();
    <br/> var my_format = vertex_format_end();<br/> v_buff = vertex_create_buffer_from_buffer(global.modelBuff, myFormat);</p>
  <p>The above code will create a new vertex format then create a new vertex buffer from a previously created regular buffer, applying the custom vertex format to it.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Primitives_And_Vertex_Formats.htm">Primitives And Vertex Formats</a></div>
        <div style="float:right">Next: <a href="vertex_create_buffer_from_buffer_ext.htm">vertex_create_buffer_from_buffer_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
vertex_create_buffer_from_buffer
-->
  <!-- TAGS
vertex_create_buffer_from_buffer
-->

</body></html>