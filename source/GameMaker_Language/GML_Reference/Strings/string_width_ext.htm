<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>string_width_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for string_width_ext"/>
  <meta name="rh-index-keywords" content="string_width_ext"/>
  <meta name="search-keywords" content="string_width_ext"/>
</head>

<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>string_width_ext</h1>
  <p>This function will return the maximum width (in pixels) of the input string, taking into account the line separation and line-break width (which is defined as the number of pixels that the string can occupy before a line break is inserted). It is very
    handy for calculating distances between text elements based on the maximum width of a string that is split over several lines as it would be drawn with <a href="../Drawing/Text/draw_text_ext.htm"><tt>draw_text_ext()</tt></a> using the currently defined
    font. Separation and width can be set to -1 to get the default spacing.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">string_width_ext(string, sep, w);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>string</td>
        <td>The string to measure the width of.</td>
      </tr>
      <tr>
        <td>sep</td>
        <td>The distance in pixels between lines of text as if the string was being drawn.</td>
      </tr>
      <tr>
        <td>w</td>
        <td>The maximum width (in pixels) of the string before a line break as if the string was bring drawn.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var ww = string_width_ext(str_Story_Text[1], -1, 100);<br/> draw_text_ext(32, 32, str_Story_Text[1], -1, 100);<br/> draw_text_ext(32 + ww, 32, str_Story_Text[2], -1, 100);</p>
  <p>The above code will get the width of the given string, taking into account the line separation and line-break width, and then draw two lines of text, using the returned total string width as a separator.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Strings.htm">Strings</a></div>
        <div style="float:right">Next: <a href="string_hash_to_newline.htm">string_hash_to_newline</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
string_width_ext
-->
  <!-- TAGS
string_width_ext
-->

</body></html>