<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instanceof</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function instanceof" />
  <meta name="rh-index-keywords" content="instanceof" />
  <meta name="search-keywords" content="" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instanceof</h1>
  <p>This function can be used to get the name of the function that was used to create a struct when the struct was created using a <a href="../../GML_Overview/Structs.htm">constructor function</a> and the <a href="../../GML_Overview/Language_Features/new.htm"><tt></tt></a>    <a href="../../GML_Overview/Language_Features/new.htm"><tt>new</tt></a> operator. You supply the variable with the struct reference to check and the function will return either a string with the function name or <tt>undefined</tt>. Note that if you
    pass the function a struct literal (ie: a struct that was created without using a constructor function) then it will simply return the string &quot;struct&quot;. This function can also be used to check if a struct reference is a <strong><a class="glossterm" data-glossterm="weak reference" href="#">weak reference</a></strong> or
    not, in which case the function will return the string &quot;<span class="inline">weakref</span>&quot; instead of the name of the function that created the struct for more information, see the function <span class="inline">weak_ref_create()</span>).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">instanceof(struct_id);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>struct</td>
        <td>The struct reference to use.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">String or <tt>undefined</tt></p>
  <p> </p>
  <h4>Extended Example:</h4>
  <p>In this example we must first define the function that will be used as the constructor for the struct:</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br/>     {
    <br/>     a = _a;<br/>     b = _b;<br/>     c = _c;<br/>     }
  </p>
  <p>This function can then be used along with the <tt>new</tt> operator to create a struct and populate it with the variables set to the values of the arguments used in the function:</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;);</p>
  <p>We can then get the name of the function that was used like this:</p>
  <p class="code">var _name = instanceof(mystruct);<br/> if is_string(_name)<br/>     {
    <br/>     show_debug_message(_name);
    <br/>     }
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Variable_Functions.htm">Variable Functions</a></div>
        <div style="float:right">Next: <a href="array_create.htm">array_create</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instanceof
-->
  <!-- TAGS
instanceof
-->
</body>
</html>