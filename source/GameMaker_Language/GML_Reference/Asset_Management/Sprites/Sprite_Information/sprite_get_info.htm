<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sprite_get_info</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Page explaining the function sprite_get_info" />
  <meta name="rh-index-keywords" content="sprite_get_info" />
  <meta name="search-keywords" content="sprite_get_info" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>sprite_get_info</h1>
  <p>This function is used to retrieve information for the given sprite. You supply a sprite index (which can be an asset added through the <a href="../../../../../Introduction/The_Asset_Browser.htm">Asset Browser</a> or a sprite <a href="../Sprite_Manipulation/sprite_add.htm">added</a>    at runtime) and the function returns a <a href="../../../../GML_Overview/Structs.htm">struct</a> with the following variables:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th style="">Variable Name</th>
        <th>Data Type</th>
        <th style="">Description</th>
      </tr>
      <tr>
        <td style=""><strong>width</strong></td>
        <td>real</td>
        <td style="">The sprite&#39;s width (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>height</strong></td>
        <td>real</td>
        <td style="">The sprite&#39;s height (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>xoffset</strong></td>
        <td>real</td>
        <td style="">The sprite&#39;s X offset/origin (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>yoffset</strong></td>
        <td>real</td>
        <td style="">The sprite&#39;s Y offset/origin (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>transparent</strong></td>
        <td>boolean</td>
        <td style=""><tt>true</tt> if the sprite is marked as transparent, otherwise <tt>false</tt><br/>
          <span>(This can only be specified through <tt><a href="../Sprite_Manipulation/sprite_add.htm">sprite_add()</a></tt>)</span></td>
      </tr>
      <tr>
        <td style=""><strong>smooth</strong></td>
        <td>boolean</td>
        <td style=""><tt>true</tt> if the sprite is marked as smooth, otherwise <tt>false</tt><br/>
          <span>(This can only be specified through <tt><a href="../Sprite_Manipulation/sprite_add.htm">sprite_add()</a></tt>)</span></td>
      </tr>
      <tr>
        <td style=""><strong>preload</strong></td>
        <td>boolean</td>
        <td style=""><tt>true</tt> if the sprite is marked as preload, otherwise <tt>false</tt></td>
      </tr>
      <tr>
        <td style=""><strong>type</strong></td>
        <td>real</td>
        <td style="">The type of the sprite:<br/>
          <tt>0</tt> - Bitmap (Regular sprites)<br/>
          <tt>1</tt> - SWF<br/>
          <tt>2</tt> - Spine</td>
      </tr>
      <tr>
        <td style=""><strong>bbox_left</strong></td>
        <td>real</td>
        <td style="">Position of the left edge of the bounding box (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>bbox_top</strong></td>
        <td>real</td>
        <td style="">Position of the top edge of the bounding box (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>bbox_right</strong></td>
        <td>real</td>
        <td style="">Position of the right edge of the bounding box (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>bbox_bottom</strong></td>
        <td>real</td>
        <td style="">Position of the bottom edge of the bounding box (in pixels)</td>
      </tr>
      <tr>
        <td style=""><strong>name</strong></td>
        <td>string</td>
        <td style="">The name of the sprite</td>
      </tr>
      <tr>
        <td style=""><strong>num_subimages</strong></td>
        <td>real</td>
        <td style="">The number of sub-images (or frames) in the sprite</td>
      </tr>
      <tr>
        <td style=""><strong>use_mask</strong></td>
        <td>boolean</td>
        <td style=""><tt>true</tt> if this sprite uses a collision mask, otherwise <tt>false</tt></td>
      </tr>
      <tr>
        <td style=""><strong>num_masks</strong></td>
        <td>real</td>
        <td style="">The number of masks in this sprite (will be greater than 1 if the sprite has per-frame masks)</td>
      </tr>
      <tr>
        <td style=""><strong>nineslice</strong><strong></strong></td>
        <td>struct</td>
        <td style="">The <a href="../Nine_Slice_Struct.htm">Nine Slice struct</a> for this sprite, or <tt>undefined</tt> if it has no nine slice data</td>
      </tr>
      <tr>
        <td style=""><strong>broadcast</strong></td>
        <td>array</td>
        <td style="">Array of broadcast messages for this sprite, where each broadcast message is a struct containing information (more information below)</td>
      </tr>
      <tr>
        <td style=""><strong>frame_info</strong></td>
        <td>array</td>
        <td style="">Array of frames for this sprite, where each frame is a struct containing information on its timing (more information below)</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong>This additional variable is available only for regular Bitmap sprites:</strong></p>
  <table>
    <tbody>
      <tr>
        <th>Variable Name</th>
        <th style="">Data Type</th>
        <th style="">Description</th>
      </tr>
      <tr>
        <td><strong>frames</strong></td>
        <td style="">array</td>
        <td style="">Array of frames for this sprite, where each frame is a struct containing information on its texture (more information below)</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong>These additional variables are available only for Spine sprites:</strong></p>
  <table>
    <tbody>
      <tr>
        <th style="">Variable Name</th>
        <th>Data Type</th>
        <th style="">Description</th>
      </tr>
      <tr>
        <td style=""><strong>num_atlas</strong></td>
        <td>real</td>
        <td style="">The number of atlas textures used</td>
      </tr>
      <tr>
        <td style=""><strong>atlas_texture</strong></td>
        <td>array</td>
        <td style="">Array of texture IDs used for the atlas</td>
      </tr>
      <tr>
        <td style=""><strong>premultiplied</strong></td>
        <td>boolean</td>
        <td style=""><tt>true</tt> if this sprite is marked as premultiplied, otherwise <tt>false</tt></td>
      </tr>
      <tr>
        <td style=""><strong>animation_names</strong></td>
        <td>array</td>
        <td style="">Array containing the names of each animation in this sprite</td>
      </tr>
      <tr>
        <td style=""><strong>skin_names</strong></td>
        <td>array</td>
        <td style="">Array containing the names of each skin in this sprite</td>
      </tr>
      <tr>
        <td style=""><strong>bones</strong></td>
        <td>array</td>
        <td style="">Array containing structs for each bone in this sprite (more information below)</td>
      </tr>
      <tr>
        <td style=""><strong>slots</strong></td>
        <td>array</td>
        <td style="">Array containing structs for each slot in this sprite (more information below)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>The function will return <tt>undefined</tt> if the given sprite doesn&#39;t exist. Also note that information returned in this struct should be considered <strong>read-only</strong> as modifying these variables will not affect the sprite.</p>
  <p>The sections below contain information on arrays and structs included in the returned struct based on the sprite type:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">General Sprite Data</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p>This section contains information on variables included in the struct for all kinds of sprites.</p>
    <p>The <tt class="">broadcast</tt> variable is an array that contains information for the broadcast messages that exist in the given sprite. Each entry in this array is a struct for the broadcast message, containing the following variables:<br/></p>
    <table
      class=" cke_show_border">
      <tbody>
        <tr>
          <th style="">Variable Name</th>
          <th>Data Type</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><strong>time</strong></td>
          <td>real</td>
          <td style="">The timing for this broadcast message from the start of the animation (in microseconds)</td>
        </tr>
        <tr>
          <td style=""><strong>message</strong></td>
          <td>string</td>
          <td style="">The broadcast message string</td>
        </tr>
      </tbody>
      </table>
      <p><br/></p>
      <p>The <tt class="">frame_info</tt> variable is an array that contains information on the timing of each frame. Each entry in this array is a struct for that frame, containing the following variables:</p>
      <table class=" cke_show_border">
        <tbody>
          <tr>
            <th style="">Variable Name</th>
            <th>Data Type</th>
            <th style="">Description</th>
          </tr>
          <tr>
            <td style=""><strong>time</strong></td>
            <td>real</td>
            <td style="">The timing for the start of this frame (in seconds)</td>
          </tr>
          <tr>
            <td style=""><strong>image_index</strong></td>
            <td>real</td>
            <td style="">The image index of this frame</td>
          </tr>
        </tbody>
      </table>
      <p><br/></p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Bitmap Sprite Data</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p>This section contains information on variables included in the struct for regular Bitmap sprites.</p>
    <p>The <tt class="">frames</tt> variable is an array that contains information for each frame in the sprite. Each entry in this array is a struct for that frame, containing the following variables:</p>
    <table class=" cke_show_border">
      <tbody>
        <tr>
          <th style="">Variable Name</th>
          <th>Data Type</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><strong>x</strong></td>
          <td>real</td>
          <td style="">The X position of this frame on its texture page (in pixels)</td>
        </tr>
        <tr>
          <td style=""><strong>y</strong></td>
          <td>real</td>
          <td style="">The Y position of this frame on its texture page (in pixels)</td>
        </tr>
        <tr>
          <td style=""><strong>w</strong></td>
          <td>real</td>
          <td style="">The logical width of the frame (in pixels) - in most cases this will be equal to the crop width given below</td>
        </tr>
        <tr>
          <td style=""><strong>h</strong></td>
          <td>real</td>
          <td style="">The logical height of the frame (in pixels) - in most cases this will be equal to the crop height given below</td>
        </tr>
        <tr>
          <td style=""><strong>texture</strong></td>
          <td>real</td>
          <td style="">The texture page ID for this frame</td>
        </tr>
        <tr>
          <td style=""><strong>original_width</strong></td>
          <td>real</td>
          <td style="">The original width of the frame (in pixels)</td>
        </tr>
        <tr>
          <td style=""><strong>original_height</strong></td>
          <td>real</td>
          <td style="">The original height of the frame (in pixels)</td>
        </tr>
        <tr>
          <td style=""><strong>crop_width</strong></td>
          <td>real</td>
          <td style="">The actual width of the frame on the texture page after cropping and scaling (since GMS2 automatically trims the empty space around an image)</td>
        </tr>
        <tr>
          <td style=""><strong>crop_height</strong></td>
          <td>real</td>
          <td style="">The actual height of the frame on the texture page after cropping and scaling</td>
        </tr>
        <tr>
          <td style=""><strong>x_offset</strong></td>
          <td>real</td>
          <td style="">The X offset from the left edge of the original image to the left edge of the cropped part</td>
        </tr>
        <tr>
          <td style=""><strong>y_offset</strong></td>
          <td>real</td>
          <td style="">The Y offset from the top edge of the original image to the top edge of the cropped part</td>
        </tr>
      </tbody>
    </table>
    <p><br/></p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Spine Sprite Data</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p>This section contains informationon variables included in the struct for Spine sprites.</p>
    <p>The <tt>bones</tt> variable is an array that contains information for each bone in the given Spine sprite. Each entry in this array is a struct for the bone, containing the following variables:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Variable Name</th>
          <th>Data Type</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><strong>parent</strong></td>
          <td>string</td>
          <td style="">The name of the parent bone, or <tt>undefined</tt> if there is no parent</td>
        </tr>
        <tr>
          <td style=""><strong>name</strong></td>
          <td>string</td>
          <td style="">The name of this bone</td>
        </tr>
        <tr>
          <td style=""><strong>index</strong></td>
          <td>real</td>
          <td style="">The index of this bone</td>
        </tr>
        <tr>
          <td style=""><strong>length</strong></td>
          <td>real</td>
          <td style="">The length of this bone</td>
        </tr>
        <tr>
          <td style=""><strong>x</strong></td>
          <td>real</td>
          <td style="">The X position of this bone</td>
        </tr>
        <tr>
          <td style=""><strong>y</strong></td>
          <td>real</td>
          <td style="">The Y position of this bone</td>
        </tr>
        <tr>
          <td style=""><strong>rotation</strong></td>
          <td>real</td>
          <td style="">The rotation of this bone in degrees</td>
        </tr>
        <tr>
          <td style=""><strong>scale_x</strong></td>
          <td>real</td>
          <td style="">(Internal to Spine) Scale value on X</td>
        </tr>
        <tr>
          <td style=""><strong>scale_y</strong></td>
          <td>real</td>
          <td style="">(Internal to Spine) Scale value on Y</td>
        </tr>
        <tr>
          <td style=""><strong>shear_x</strong></td>
          <td>real</td>
          <td style="">(Internal to Spine) Shear value on X</td>
        </tr>
        <tr>
          <td style=""><strong>shear_y</strong></td>
          <td>real</td>
          <td style="">(Internal to Spine) Shear value on Y</td>
        </tr>
        <tr>
          <td style=""><strong>transform_mode</strong></td>
          <td>real</td>
          <td style="">(Internal to Spine) The transform mode - please consult the <a href="http://en.esotericsoftware.com/spine-documentation" title="Spine Documentation">Spine documentation</a> for more information</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p>The <tt>slots</tt> variable is an array that contains information for each slot in the given Spine sprite. Each entry in this array is a struct for the slot, containing the following variables:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Variable Name</th>
          <th>Data Type</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><strong>name</strong></td>
          <td>string</td>
          <td style="">The name of the slot</td>
        </tr>
        <tr>
          <td style=""><strong>index</strong></td>
          <td>real</td>
          <td style="">The index of the slot</td>
        </tr>
        <tr>
          <td style=""><strong>bone</strong></td>
          <td>string</td>
          <td style="">The name of the bone, or <tt>&quot;(none)&quot;</tt> if there is no bone for this slot</td>
        </tr>
        <tr>
          <td style=""><strong>attachment</strong></td>
          <td>string</td>
          <td style="">Attachment name</td>
        </tr>
        <tr>
          <td style=""><strong>red</strong></td>
          <td>real</td>
          <td style="">Red component of the slot&#39;s colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>green</strong></td>
          <td>real</td>
          <td style="">Green component of the slot&#39;s colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>blue</strong></td>
          <td>real</td>
          <td style="">Blue component of the slot&#39;s colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>alpha</strong></td>
          <td>real</td>
          <td style="">Alpha component of the slot&#39;s colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>blendMode</strong></td>
          <td>real</td>
          <td style="">(Internal to Spine) Blend mode for the slot</td>
        </tr>
        <tr>
          <td style=""><strong>dark_red*</strong></td>
          <td>real</td>
          <td style="">Red component of the slot&#39;s <strong>dark </strong>colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>dark_green*</strong></td>
          <td>real</td>
          <td style="">Green component of the slot&#39;s <strong>dark </strong>colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>dark_blue*</strong></td>
          <td>real</td>
          <td style="">Blue component of the slot&#39;s <strong>dark </strong>colour (0-1)</td>
        </tr>
        <tr>
          <td style=""><strong>dark_alpha*</strong></td>
          <td>string</td>
          <td style="">Alpha component of the slot&#39;s <strong>dark </strong>colour (0-1)</td>
        </tr>
      </tbody>
    </table>
    <p class="note">* <strong>NOTE</strong>: The dark color variables are only available if the slot has <a href="http://en.esotericsoftware.com/spine-slots#Tint-black" title="Tint Black">Tint Black</a> enabled.</p>
    <p> </p>
  </div>
  <p> </p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">sprite_get_info(index);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>index</td>
        <td>The index of the sprite to get the information for.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns</h4>
  <p class="code">Struct</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code"> </p>
  <p>The above code</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Sprite_Information.htm">Sprite Information</a></div>
        <div style="float:right">Next: <a href="../Sprite_Manipulation/sprite_exists.htm">sprite_exists</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
sprite_get_info
-->
  <!-- TAGS
sprite_get_info
-->
</body>
</html>