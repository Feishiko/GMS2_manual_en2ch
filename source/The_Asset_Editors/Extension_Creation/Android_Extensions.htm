<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Android Extensions</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how Android extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating Android Extensions" />
  <meta name="search-keywords" content="Android extensions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Android Extensions</h1>
  <p>To create an extension for Android you have to do it in two parts. The first part would be to add the extension itself, along with the required files etc... and the second is to create the functions and macros/constants that the extension requires.
    The functions and constants are added using <strong>placeholder </strong>files to group them together, so you&#39;d add a placeholder and then define the functions and macros as explained in the section above. To add the rest of the files though you
    need to first tick the <em>Android </em>check-box in the <strong>Additional Features</strong> section of the editor:</p>
  <p class="dropspot"><img alt="Android Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_Android.png" /></p>
  <p>Here you give the following details:</p>
  <ul class="colour">
    <li class="dropspot"><strong>ClassName</strong>: Your extension can have multiple classes, with each class having its own functions and constants, so you should give it a name that reflects its purpose.</li>
    <li class="dropspot"><strong>Android Permissions</strong>: Here you can add in any extra permissions that your extension requires. What these permissions are will depend entirely on the use that the extension has, and so you should <a href="https://developer.android.com/reference/android/Manifest.permission.html">check the documentation supplied by Google</a>      for the Android platform, or, if you are using a third party SDK, the documentation that comes with the SDK. To add a new permission you need to click the <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png"
        width="18" /> button to add a placeholder permission, and then do a slow <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" /> click on that to edit it to what is required. You can remove permissions using the <img alt="Remove Argument Icon"
        class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png" /> button.</li>
    <li class="dropspot"><strong>Inject To Gradle Dependencies</strong>: Here you can add any extra code that needs to be injected (added) into the Gradle build dependencies.</li>
    <li class="dropspot"><strong>Inject to AndroidManifest.xml Manifest</strong>: Here you set any extra code to be injected (added) to the Android Manifest XML file when your game is built for testing or final release. Make sure to revise this (and your permissions) carefully
      before submitting any games to the store, as incorrect settings will cause your game to be failed for submission.</li>
    <li class="dropspot"><strong>Inject to AndroidManifest.xml Application</strong>: Here you set any extra code to be injected (added) to the Android Manifest XML file under the Application heading when your game is built for testing or final release. Make sure to revise
      this (and your permissions) carefully before submitting any games to the store, as incorrect settings will cause your game to be failed for submission.</li>
    <li class="dropspot"><strong>Inject to AndroidManifest.xml RunnerActivity</strong>: Here you set any extra code to be injected (added) to the Android Manifest XML file under the RunnerActivity heading when your game is built for testing or final release. Make sure to
      revise this (and your permissions) carefully before submitting any games to the store, as incorrect settings will cause your game to be failed for submission.</li>
  </ul>
  <p>Once you have set this up correctly, you will need to add the required files for your extension package to work. To do this you need to click on the buttons at the bottom, either <em>Add SDK</em> or <em>Add Source</em> and then browse to the files you
    wish to add. Added files will be stored in the <span class="inline">AndroidSource</span> directory along with your extension. You can open this location at any time by right clicking <img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png"
    /> on the extension and selecting <em>Open Extension Directory</em>.</p>
  <p>For more information on creating Android extensions, please see the <a href="https://help.yoyogames.com/hc/en-us/articles/360012504971-iOS-and-Android-Creating-A-Simple-Extension">YoYo Games Knowledge Base</a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Extensions.htm">The Extension Editor</a></div>
        <div style="float:right">Next: <a href="iOS_Extensions.htm">iOS Extensions</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Android Extensions
-->
  <!-- TAGS
extensions_android
-->
</body>
</html>